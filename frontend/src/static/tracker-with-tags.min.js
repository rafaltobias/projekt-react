/**
 * Visit Tracker with Tag Manager - Automatic website visitor & tag tracking script (Minified)
 */
!function(){const e="http://localhost:5000/api/track",t="http://localhost:5000/api/tags",a="visitor_tracker_session_id";function n(){let e=sessionStorage.getItem(a);return e||(e=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}(),sessionStorage.setItem(a,e)),e}function o(){const e=navigator.userAgent;let t="Unknown";return e.indexOf("Firefox")>-1?t="Firefox":e.indexOf("SamsungBrowser")>-1?t="Samsung Browser":e.indexOf("Opera")>-1||e.indexOf("OPR")>-1?t="Opera":e.indexOf("Edge")>-1||e.indexOf("Edg")>-1?t="Edge":e.indexOf("Chrome")>-1?t="Chrome":e.indexOf("Safari")>-1?t="Safari":(e.indexOf("MSIE")>-1||e.indexOf("Trident")>-1)&&(t="Internet Explorer"),t}function i(){const e=navigator.userAgent;let t="Unknown";return/Windows/.test(e)?t="Windows":/Android/.test(e)?t="Android":/iPhone|iPad|iPod/.test(e)?t="iOS":/Mac/.test(e)?t="MacOS":/Linux/.test(e)&&(t="Linux"),t}function r(){const e=navigator.userAgent;let t="Desktop";return/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(e)?t="Tablet":/Mobile|iP(hone|od)|Android|BlackBerry|IEMobile/.test(e)&&(t="Mobile"),t}document.addEventListener("DOMContentLoaded",(function(){const t={page_url:window.location.href,browser:o(),os:i(),device:r(),session_id:n(),is_entry_page:!0,is_exit_page:!1,referrer:document.referrer||"direct"};fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{console.debug("Visit tracking successful",e)})).catch((e=>{console.error("Error sending visit data:",e)}))})),window.addEventListener("beforeunload",(function(){const t={page_url:window.location.href,session_id:n(),is_entry_page:!1,is_exit_page:!0};if(navigator.sendBeacon){const a=new Blob([JSON.stringify(t)],{type:"application/json"});navigator.sendBeacon(e,a)}}));const c={tags:[],initialized:!1,init:async function(){if(!this.initialized)try{await this.loadTags(),this.setupEventListeners(),this.initialized=!0,console.log("Tag Manager initialized successfully")}catch(e){console.error("Failed to initialize Tag Manager:",e)}},loadTags:async function(){try{const e=await fetch(t);if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);const a=e.headers.get("content-type");if(!a||!a.includes("application/json"))throw new Error(`Expected JSON but got ${a}`);const n=await e.json();Array.isArray(n)?this.tags=n:n&&n.rows&&Array.isArray(n.rows)?this.tags=n.rows:this.tags=[],console.log(`Loaded ${this.tags.length} tags`)}catch(e){console.error("Failed to load tags:",e),this.tags=[]}},setupEventListeners:function(){this.executeTags("page_view"),this.executeTags("all_pages"),this.tags.forEach((e=>{let t=e.trigger;try{"string"==typeof t&&t.startsWith("{")&&(t=JSON.parse(t))}catch(e){console.error("Error parsing trigger:",e)}if("object"==typeof t&&"click"===t.type&&t.target||"click"===t){const a="object"==typeof t?t.target:"";a&&setTimeout((()=>{document.querySelectorAll(a).forEach((t=>{t.dataset.tagClickListener||(t.addEventListener("click",(a=>{a.stopPropagation(),this.executeTag(e)})),t.dataset.tagClickListener="1")}))}),500)}}))},executeTags:function(e){this.tags.forEach((t=>{let a=t.trigger;try{"string"==typeof a&&a.startsWith("{")&&(a=JSON.parse(a))}catch(e){}("object"==typeof a&&a.type===e||a===e)&&this.executeTag(t)}))},executeTag:function(e){let t={};try{"string"==typeof e.config?t=JSON.parse(e.config):"object"==typeof e.config&&(t=e.config)}catch(e){return void console.error("Error parsing tag config:",e)}if(t.action)switch(t.action){case"alert":alert(t.value||"Alert!");break;case"log":console.log("[Tag Manager]",t.value||"Log event");break;case"redirect":t.value&&(window.location.href=t.value)}}};c.init(),window.VisitTracker={trackEvent:function(t,a){try{const o=n(),i={page_url:window.location.href,session_id:o,is_entry_page:!1,is_exit_page:!1,event_name:t,event_data:a};fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{console.debug("Event tracking successful",e)})).catch((e=>{console.error("Error sending event data:",e)}))}catch(e){console.error("Error in tracking event:",e)}},getSessionId:function(){return n()},getBrowserInfo:function(){return{browser:o(),os:i(),device:r(),userAgent:navigator.userAgent}},TagManager:c}}();
