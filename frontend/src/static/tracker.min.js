!function(){const e="http://localhost:5000/api/track",t="visitor_tracker_session_id";function n(){return"granted"===localStorage.getItem("data_sharing_consent")}function i(){let e=sessionStorage.getItem(t);return e||(e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})),sessionStorage.setItem(t,e)),e}function o(){const e=navigator.userAgent;let t="Unknown";return e.indexOf("Firefox")>-1?t="Firefox":e.indexOf("SamsungBrowser")>-1?t="Samsung Browser":e.indexOf("Opera")>-1||e.indexOf("OPR")>-1?t="Opera":e.indexOf("Edge")>-1||e.indexOf("Edg")>-1?t="Edge":e.indexOf("Chrome")>-1?t="Chrome":e.indexOf("Safari")>-1?t="Safari":(e.indexOf("MSIE")>-1||e.indexOf("Trident")>-1)&&(t="Internet Explorer"),t}function r(){const e=navigator.userAgent;let t="Unknown";return e.indexOf("Windows NT 10.0")>-1?t="Windows 10":e.indexOf("Windows NT 6.3")>-1?t="Windows 8.1":e.indexOf("Windows NT 6.2")>-1?t="Windows 8":e.indexOf("Windows NT 6.1")>-1?t="Windows 7":e.indexOf("Windows NT")>-1?t="Windows":/iPhone|iPad|iPod/.test(e)?t="iOS":e.indexOf("Android")>-1?t="Android":e.indexOf("Mac")>-1?t="macOS":e.indexOf("Linux")>-1&&(t="Linux"),t}function a(){return/Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?/iPad|Tablet|Android(?!.*Mobile)/i.test(navigator.userAgent)?"Tablet":"Mobile":"Desktop"}function s(){if(n())try{const n=sessionStorage.getItem(t);if(n){const t={page_url:window.location.href,session_id:n,is_entry_page:!1,is_exit_page:!0};if(navigator.sendBeacon){(new Headers).append("Content-Type","application/json");const n=new Blob([JSON.stringify(t)],{type:"application/json"});navigator.sendBeacon(e,n)}else fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),keepalive:!0}).catch((()=>{}))}}catch(e){console.error("Error in tracking exit page:",e)}else console.debug("Exit page tracking skipped - no consent granted")}!function(t=!1){if(n())try{const n=i(),s=o(),c=r(),g=a(),d={page_url:window.location.href,referrer:document.referrer,browser:s,os:c,device:g,session_id:n,is_entry_page:t,is_exit_page:!1};fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d)}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{console.debug("Visit tracking successful",e)})).catch((e=>{console.error("Error sending tracking data:",e)}))}catch(e){console.error("Error in tracking visit:",e)}else console.debug("Tracking skipped - no consent granted")}(!sessionStorage.getItem(t)),window.addEventListener("beforeunload",s),window.addEventListener("pagehide",s),document.addEventListener("visibilitychange",(function(){if("hidden"===document.visibilityState){if(!n())return void console.debug("Visibility tracking skipped - no consent granted");const t={page_url:window.location.href,session_id:i(),is_entry_page:!1,is_exit_page:!0};if(navigator.sendBeacon){const n=new Blob([JSON.stringify(t)],{type:"application/json"});navigator.sendBeacon(e,n)}}})),window.VisitTracker={trackEvent:function(t,o){if(n())try{const n=i(),r={page_url:window.location.href,session_id:n,is_entry_page:!1,is_exit_page:!1,event_name:t,event_data:o};fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{console.debug("Event tracking successful",e)})).catch((e=>{console.error("Error sending event data:",e)}))}catch(e){console.error("Error in tracking event:",e)}else console.debug("Event tracking skipped - no consent granted")},getSessionId:function(){return i()},getBrowserInfo:function(){return{browser:o(),os:r(),device:a(),userAgent:navigator.userAgent}}};const c={tags:[],initialized:!1,init:async function(){if(!this.initialized)try{await this.loadTags(),this.setupEventListeners(),this.initialized=!0,console.log("Tag Manager initialized successfully")}catch(e){console.error("Failed to initialize Tag Manager:",e)}},loadTags:async function(){try{const e=await fetch("http://localhost:5000/api/tags"),t=await e.json();this.tags=t||[],console.log(`Loaded ${this.tags.length} tags`)}catch(e){console.error("Failed to load tags:",e),this.tags=[]}},setupEventListeners:function(){this.executeTags("page_view"),this.executeTags("all_pages"),this.tags.forEach((e=>{let t=e.trigger;try{"string"==typeof t&&t.startsWith("{")&&(t=JSON.parse(t))}catch(e){console.error("Error parsing trigger:",e)}if("object"==typeof t&&"click"===t.type&&t.target||"click"===t){const n="object"==typeof t?t.target:"";if(!n)return;setTimeout((()=>{document.querySelectorAll(n).forEach((t=>{t.dataset.tagClickListener||(t.addEventListener("click",(t=>{t.stopPropagation(),this.executeTag(e)})),t.dataset.tagClickListener="1")}))}),500)}}))},executeTags:function(e){this.tags.forEach((t=>{let n=t.trigger;try{"string"==typeof n&&n.startsWith("{")&&(n=JSON.parse(n))}catch(e){}("object"==typeof n&&n.type===e||n===e)&&this.executeTag(t)}))},executeTag:function(e){let t={};try{"string"==typeof e.config?t=JSON.parse(e.config):"object"==typeof e.config&&(t=e.config)}catch(e){return void console.error("Error parsing tag config:",e)}if(t.action)switch(t.action){case"alert":alert(t.value||"Alert!");break;case"log":console.log("[Tag Manager]",t.value||"Log event");break;case"redirect":t.value&&(window.location.href=t.value)}}};c.init(),window.VisitTracker.TagManager=c}();